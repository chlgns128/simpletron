<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sim.mybatis.BoardMapper">

	<select id="getArticleList" parameterType="hashmap"
		resultType="Article">
		SELECT
		a.articleno, a.title, a.id, a.regdate,
		count(distinct(f.attachfileno))
		attachfileNum,
		count(distinct(c.commentno)) commentNum,
		a.hit, a.anonymous,
		a.recommend
		FROM
		article as a left join attachfile as f on
		a.articleno
		=
		f.articleno
		left
		join comments as c on a.articleno =
		c.articleno
		WHERE
		a.boardcd =
		#{boardCd}
		<if test="searchWord != null and searchWord != ''">
			AND (title LIKE '%${searchWord}%' OR content LIKE
			'%${searchWord}%')
		</if>
		GROUP BY a.articleno, title, a.regdate
		ORDER BY articleno DESC
		LIMIT
		${start}, ${end}
	</select>

	<select id="getTotalRecord" parameterType="hashmap"
		resultType="int">
		SELECT count(*) FROM article WHERE boardcd = #{boardCd}
		<if test="searchWord != null">
			AND (title LIKE '%${searchWord}%' OR
			content LIKE
			'%${searchWord}%')
		</if>
	</select>
	<insert id="insert" parameterType="Article">
		INSERT INTO article
		(articleno, boardcd, title, content, id, hit,
		regdate,anonymous,recommend)
		VALUES
		(0,
		#{boardCd}, #{title}, #{content},
		#{id}, 0, NOW(), 0, 0)
	</insert>

	<update id="update" parameterType="Article">
		UPDATE article
		SET
		title=#{title},content=#{content}
		WHERE articleno=#{articleNo}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM article WHERE
		articleno = #{articleNo}
	</delete>

	<select id="getBoardNm" parameterType="string"
		resultType="string">
		SELECT boardNm FROM board WHERE boardcd = #{boardCd}
	</select>

	<update id="increaseHit" parameterType="int">
		UPDATE article SET hit =
		hit + 1 WHERE articleno = #{articleNo}
	</update>

	<update id="increaseRecommend" parameterType="int">
		UPDATE article SET
		recommend =
		recommend + 1 WHERE articleno = #{articleNo}
	</update>

	<resultMap type="Article" id="ArticleClob">
		<result property="content" column="content" jdbcType="VARCHAR"
			javaType="java.lang.String" />
	</resultMap>

	<select id="getArticle" parameterType="int"
		resultMap="ArticleClob">
		SELECT articleno, title, content, id, hit, regdate
		FROM
		article
		WHERE articleno = #{articleNo}
	</select>
	<select id="getPrevArticle" parameterType="hashmap"
		resultType="Article">
		SELECT articleno, title, regdate, hit
		FROM article
		WHERE
		articleno = (SELECT MAX(articleno)
		FROM article
		WHERE articleno &lt;
		#{articleNo} )
	</select>
	<select id="getNextArticle" parameterType="hashmap"
		resultType="Article">
		SELECT articleno, title, regdate, hit
		FROM article
		WHERE
		articleno = (SELECT MAX(articleno)
		FROM article
		WHERE articleno-2 &lt;
		#{articleNo} )
	</select>
	<select id="getNewArticle" resultType="Article">
		SELECT articleno, title,
		content, id, hit, regdate
		FROM (SELECT * FROM ARTICLE ORDER BY
		articleno DESC)a
		LIMIT 0, 1;

	</select>

	<insert id="insertAttachFile" parameterType="AttachFile">
		INSERT INTO
		attachfile (attachfileno, filename, filetype, filesize, articleno)
		VALUES
		(0, #{filename}, #{filetype}, #{filesize}, #{articleNo})
	</insert>

	<select id="getAttachFileList" parameterType="int"
		resultType="AttachFile">
		SELECT attachfileno, filename, filetype, filesize,
		articleno
		FROM attachfile
		WHERE articleno = #{articleNo}
		ORDER BY
		attachfileno
	</select>

	<delete id="deleteFile" parameterType="int">
		DELETE FROM attachfile
		WHERE attachfileno = #{attachFileNo}
	</delete>

	<insert id="insertComment" parameterType="Comment">
		INSERT INTO comments
		(commentno, articleno, email, memo, regdate)
		VALUES (0, #{articleNo},
		#{email}, #{memo}, now())
	</insert>

	<update id="updateComment" parameterType="Comment">
		UPDATE comments SET
		memo = #{memo} WHERE commentno = #{commentNo}
	</update>

	<delete id="deleteComment" parameterType="int">
		DELETE FROM comments
		WHERE commentno = #{commentNo}
	</delete>

	<select id="getComment" parameterType="int" resultType="Comment">
		SELECT
		commentno,articleno,email,memo,regdate
		FROM comments
		WHERE commentno =
		#{commentNo}
	</select>

	<select id="getCommentList" parameterType="int"
		resultType="Comment">
		SELECT commentno, articleno, email, memo, regdate
		FROM
		comments
		WHERE articleno = #{articleNo}
		ORDER BY commentno DESC
	</select>

	<insert id="insertMemory" parameterType="Simpletron"
		useGeneratedKeys="true" keyProperty="smno">
		INSERT INTO sm
		(ic, smno, memory,
		acm, ir, opcode, opand) VALUES
		(0, 1, 0, 0, 0, 0, 0)
	</insert>

	<update id="increaseCounter" parameterType="Simpletron">
		UPDATE sm SET ic = ic
		+ 1 WHERE smno = #{smno} AND memory = #{memory}
	</update>

	<update id="readValue" parameterType="Simpletron">
		UPDATE sm SET memory =
		#{memory}
		WHERE ic = #{ic}
	</update>

	<update id="loadMemory" parameterType="Simpletron">
		UPDATE sm SET acm =
		#{memory}
	</update>

	<select id="getMemory" resultType="int" parameterType="int">
		SELECT
		memory FROM sm WHERE ic
		= #{ic}
	</select>

	<select id="getAcm" resultType="int">
		SELECT acm FROM sm WHERE ic
		= 1
	</select>

	<update id="storeMemory" parameterType="Simpletron">
		UPDATE sm SET memory =
		#{acm}
		WHERE ic = #{ic}
	</update>

	<update id="updateMemory" parameterType="Simpletron">
		UPDATE sm SET memory =
		#{memory}
		WHERE ic = #{ic}
	</update>

	<select id="getMemoryList" resultType="Simpletron">
		SELECT
		smno, ic, memory,
		ir, opcode, acm, opand FROM sm
	</select>

	<select id="getMemoryList1" resultType="hashmap">
		SELECT
		smno, ic, memory,
		ir, opcode, acm, opand FROM sm
	</select>

	<update id="resetMemory">
		UPDATE sm SET memory = 0, acm = 0
	</update>




</mapper>